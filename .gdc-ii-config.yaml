microservices:
  graphene-chrome:
    docker:
      dockerfile: './Dockerfile_chrome'
      customTags:
        - '67.0.3396.79-2.39-2.3.8'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_chrome'
  graphene-firefox:
    docker:
      dockerfile: './Dockerfile_firefox'
      customTags:
        - '69.0-0.25.0-2.3.8'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_firefox'
  graphene-chrome-uisdk:
    docker:
      dockerfile: './Dockerfile_chrome_uisdk'
      customTags:
        - '8.10.0'
        - 'latest'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_chrome_uisdk'
  graphene-firefox-uisdk:
    docker:
      dockerfile: './Dockerfile_firefox_uisdk'
      customTags:
        - '8.10.0'
        - 'latest'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_firefox_uisdk'
  graphene-chrome-rubysdk:
    docker:
      dockerfile: './Dockerfile_chrome_rubysdk'
      customTags:
        - '2.1.3'
        - 'latest'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_chrome_rubysdk'
  graphene-firefox-rubysdk:
    docker:
      dockerfile: './Dockerfile_firefox_rubysdk'
      customTags:
        - '2.1.3'
        - 'latest'
      cacheFromTag: 'latest'
    buildOnChangeOf:
      paths:
      - 'Dockerfile_firefox_rubysdk'

integratedTests:
  - kind: 'image'
    env: bash
    path: .
    vault:
      QA_TEST_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-user"
    args:
      - '-v $HOME/.m2:$HOME/.m2'
      - '-e'
      - 'HOME=$HOME'
    command: >-
      ./integration-mvn-test.sh
      -pl ui-tests-msf/ui-tests-modeler
      -Dtest.module=ui-tests-msf/ui-tests-modeler
      -Dtest=LogicalDataModelPageTest
      -Dhost=staging3.intgdc.com
      -Duser=qa+test@gooddata.com
      -Dpassword=$QA_TEST_PASSWORD
      -Duser.domain=default
      -Dproject.authorizationToken=pgtestingauto01
      -Dproject.dwhDriver=pg -DdeleteMode=delete_if_successful
      -DuseDynamicUser=true
    image: harbor.intgdc.com/staging/graphene-chrome:latest
    artifacts:
      - '**/target/screenshots/**'
      - '**/target/media/video/**/**_failed.mp4'
    junitArtifacts:
      - '**/surefire-reports/*.xml'
    microservices:
      - ldm-modeler
  - kind: 'image'
    env: bash
    path: .
    vault:
      QA_TEST_PASSWORD: "$VAULT_SPECIAL_PREFIX/gooddata-stg-graphene-user"
      QA_PROJECT_TOKEN: "$VAULT_SPECIAL_PREFIX/gooddata-stg-project-token"
    args:
      - '-v $HOME/.m2:$HOME/.m2'
      - '-e'
      - 'HOME=$HOME'
    command: >-
      ./integration-mvn-test.sh
      -pl ui-tests-msf/ui-tests-datasourceapp
      -Dtest.module=ui-tests-msf/ui-tests-datasourceapp
      -Dtest=*Test
      -Dhost=staging.intgdc.com
      -Duser=qa+test@gooddata.com
      -Dpassword=$QA_TEST_PASSWORD
      -Duser.domain=default
      -Dproject.authorizationToken=$QA_PROJECT_TOKEN
      -Dproject.dwhDriver=pg -DdeleteMode=delete_if_successful
      -DuseDynamicUser=true
    image: harbor.intgdc.com/staging/graphene-chrome:latest
    artifacts:
      - '**/target/screenshots/**'
      - '**/target/media/video/**/**_failed.mp4'
    junitArtifacts:
      - '**/surefire-reports/*.xml'
    microservices:
      - datasource-management
